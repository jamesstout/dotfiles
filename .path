#!/usr/bin/env bash

# export PATH="$HOME/.fastlane/bin:$PATH"
# export PATH=/usr/local/bin:/usr/local/sbin:/usr/local/share/npm/bin:$PATH:$HOME/Projects/Scripts:$HOME/Scripts
# "$HOME/.npm-packages/bin"

# this is the root folder where all globally installed node packages will  go
export NPM_PACKAGES="$HOME/.npm-packages"
export NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"
export GOROOT="/usr/local/opt/go/libexec"

export gp=$(go env GOPATH)

paths_to_add=(
	# Private "bin"
	"$HOME/bin"
    "/usr/local/opt/openssl@1.1/bin"
    "/usr/local/opt/qt/bin"
	# Homebrew, Rudix (and various other distributions and local installations)
	/usr/local/{,s}bin
	# System
	/{,s}bin
	/usr/{,s}bin
	# X binaries
	/usr/X11/bin
	"$HOME/Projects/Scripts"
	"$HOME/Scripts"
	"$NPM_PACKAGES/bin"
	"$GOROOT/bin"
    "$gp/bin"
    "$HOME/.cargo/bin"
    "/Applications/iPhone Backup Extractor.app/Contents/MacOS"
    
);

# Create an array of directories currently in the PATH variable.
oldIFS="$IFS";
IFS=:;
set -- $PATH;
IFS="$oldIFS";
unset oldIFS;
old_paths=("$@");

# Construct an array of the directories in the new PATH, preferring our paths
# to the predefined ones.
new_paths=();
for path_to_add in "${paths_to_add[@]}"; do
	[ -d "$path_to_add" ] && new_paths+=("$path_to_add");
done;
for old_path in "${old_paths[@]}"; do
	[ -d "$old_path" ] || continue;
	for new_path in "${new_paths[@]}"; do
		[ "${old_path%%/}" = "${new_path%%/}" ] && continue 2;
	done;
	new_paths+=("$old_path");
done;

# Now implode everything into the new PATH variable.
printf -v PATH "%s:" "${new_paths[@]}";
export PATH="${PATH%:}";
unset {old,new}_path{,s} path{s,}_to_add;




#export GEM_PATH=$HOME/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0
#export GEM_SPEC_CACHE=$HOME/.rbenv/versions/2.2.2/lib/ruby/gems/2.2.0/specifications


eval "$(thefuck --alias fk)"
eval "$(rbenv init -)"
#export PATH="$HOME/.fastlane/bin:$PATH"



